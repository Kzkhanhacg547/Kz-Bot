let r = require('axios').get;
const api = 'https://4dd9ea6e-d5a6-4f8f-892c-ce90e4d539b9-00-11lae77drh9zo.janeway.replit.dev/sim'; // ƒêi·ªÅu ch·ªânh URL API theo ƒë·ªãnh d·∫°ng c·ªßa API cung c·∫•p.

class Module {
    constructor(a) {
        this.config = a;
    };
    run() {};
    handleEvent(o) {
        let msg = o.event.body;
        const reply = [
            'üå∏üå∏üå∏„Äé ùêÅùêéùêì ùêíùêàùêå „Äèüå∏üå∏üå∏\nü§ñùêÅùê®ùê≠: Em ƒë√¢y\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\nüëâùêë·ªÅply tin nh·∫Øn c·ªßa b·∫°n ·ªü ƒë√¢y',
          'üå∏üå∏üå∏„Äé ùêÅùêéùêì ùêíùêàùêå „Äèüå∏üå∏üå∏\nü§ñùêÅùê®ùê≠: ƒê√£ nghe r√µ th∆∞a ch·ªß nh√¢n\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\nüëâùêëùêûùê©ùê•ùê≤ ùê≠ùê¢ùêß ùêßùê°ùêöÃÜÃÅùêß ùêùùêûÃÇÃâ ùê≠ùê´ùê®ÃÄ ùêúùê°ùêÆùê≤ùêûÃ£ÃÇùêß ùêØùê®ÃõÃÅùê¢ ùêõùê®ùê≠',
          'üå∏üå∏üå∏„Äé ùêÅùêéùêì ùêíùêàùêå „Äèüå∏üå∏üå∏\nü§ñùêÅùê®ùê≠: B·∫Øt ƒë·∫ßu nh·∫≠n l·ªánh t·ª´ ch·ªß nh√¢n\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\nüëâùêëùêûùê©ùê•ùê≤ ùê≠ùê¢ùêß ùêßùê°ùêöÃÜÃÅùêß ùêùùêûÃÇÃâ ùê≠ùê´ùê®ÃÄ ùêúùê°ùêÆùê≤ùêûÃ£ÃÇùêß ùêØùê®ÃõÃÅùê¢ ùêõùê®ùê≠',
          'üå∏üå∏üå∏„Äé ùêÅùêéùêì ùêíùêàùêå „Äèüå∏üå∏üå∏\nü§ñùêÅùê®ùê≠: Simi ƒë√£ nghe r√µ\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\nüëâùêëùêûùê©ùê•ùê≤ ùê≠ùê¢ùêß ùêßùê°ùêöÃÜÃÅùêß ùêùùêûÃÇÃâ ùê≠ùê´ùê®ÃÄ ùêúùê°ùêÆùê≤ùêûÃ£ÃÇùêß ùêØùê®ÃõÃÅùê¢ ùêõùê®ùê≠',
          'üå∏üå∏üå∏„Äé ùêÅùêéùêì ùêíùêàùêå „Äèüå∏üå∏üå∏\nü§ñùêÅùê®ùê≠: M·ªùi ch·ªß nh√¢n ra m·ªánh l·ªánh\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\nüëâùêëùêûùê©ùê•ùê≤ ùê≠ùê¢ùêß ùêßùê°ùêöÃÜÃÅùêß ùêùùêûÃÇÃâ ùê≠ùê´ùê®ÃÄ ùêúùê°ùêÆùê≤ùêûÃ£ÃÇùêß ùêØùê®ÃõÃÅùê¢ ùêõùê®ùê≠',
          'üå∏üå∏üå∏„Äé ùêÅùêéùêì ùêíùêàùêå „Äèüå∏üå∏üå∏\nü§ñùêÅùê®ùê≠: B·∫Øt ƒë·∫ßu nghe th√°nh ch·ªâ t·ª´ ng√†i\n‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\nüëâùêëùêûùê©ùê•ùê≤ ùê≠ùê¢ùêß ùêßùê°ùêöÃÜÃÅùêß ùêùùêûÃÇÃâ ùê≠ùê´ùê®ÃÄ ùêúùê°ùêÆùê≤ùêûÃ£ÃÇùêß ùêØùê®ÃõÃÅùê¢ ùêõùê®ùê≠'
        ];

        if (!!msg) msg = msg.toLowerCase();
        else return;
        if ([
            'hey sim',
            'Hey sim',
            'Sim ∆°i',
            'sim ∆°i',
            'Sim',
            'sim',
            'Simi ∆°i',
            'simi ∆°i',
            'simi',
            'Simi',
            'bot',
            'Bot',
        ].includes(msg)) {
            // S·ª≠a l·∫°i ƒëo·∫°n n√†y ƒë·ªÉ g·ªçi API v√† l·∫•y d·ªØ li·ªáu answer
            r(`${api}?type=ask&ask=${encodeURI(msg)}&apikey=XcgyKiZf`)
                .then(response => {
                    const answer = response.data.answer;
                    o.api.sendMessage(answer, o.event.threadID, (err, data) => {
                        data.name = this.config.name;
                        data.status = true;
                        global.client.handleReply.push(data);
                    }, o.event.messageID);
                })
                .catch(err => {
                    console.error(err);
                });
        }
    }

    handleReply = async (o) => {
        let _ = o.handleReply;
        let $ = o.api.sendMessage;
        let msg = o.event.body;

        if (!!msg) msg = encodeURI(msg);
        else return;

        // S·ª≠a l·∫°i ƒëo·∫°n n√†y ƒë·ªÉ g·ªçi API v√† l·∫•y d·ªØ li·ªáu answer
        const response = await r(`${api}?type=ask&ask=${msg}`);
        const answer = response.data.answer;

        $(answer, o.event.threadID, (err, data) => {
            data.name = this.config.name;
            data.status = true;
            data.ask = msg;
            global.client.handleReply.push(data);
        }, o.event.messageID);
    };
}

module.exports = new Module({
    name: 'simi',
    version: '1.1',
    hasPermssion: 0,
    credits: 'DC-Nam',
    description: 'G·ª≠i tin nh·∫Øn ƒë·∫øn bot v√† nh·∫≠n c√¢u tr·∫£ l·ªùi.',
    commandCategory: 'Ti·ªán √≠ch',
    usages: '[.]',
    cooldowns: 0,
});
